1:long io_destroy(aio_context_t ctx)
3:long io_cancel(aio_context_t ctx_id, struct iocb* iocb, struct io_event* result)
4:long io_getevents(aio_context_t ctx_id, long min_nr, long nr, struct io_event* events, struct __kernel_timespec* timeout)
5:long setxattr(const char* path, const char* name, const void* value, size_t size, int flags)
6:long lsetxattr(const char* path, const char* name, const void* value, size_t size, int flags)
7:long fsetxattr(int fd, const char* name, const void* value, size_t size, int flags)
8:long getxattr(const char* path, const char* name, void* value, size_t size)
9:long lgetxattr(const char* path, const char* name, void* value, size_t size)
10:long fgetxattr(int fd, const char* name, void* value, size_t size)
11:long listxattr(const char* path, char* list, size_t size)
12:long llistxattr(const char* path, char* list, size_t size)
13:long flistxattr(int fd, char* list, size_t size)
14:long removexattr(const char* path, const char* name)
15:long lremovexattr(const char* path, const char* name)
16:long fremovexattr(int fd, const char* name)
17:long getcwd(char* buf, unsigned long size)
19:long eventfd2(unsigned int count, int flags)
20:long epoll_create1(int flags)
21:long epoll_ctl(int epfd, int op, int fd, struct epoll_event* event)
23:long dup(unsigned int fildes)
24:long dup3(unsigned int oldfd, unsigned int newfd, int flags)
26:long inotify_init1(int flags)
27:long inotify_add_watch(int fd, const char* path, u32 mask)
28:long inotify_rm_watch(int fd, s32 wd)
30:long ioprio_set(int which, int who, int ioprio)
31:long ioprio_get(int which, int who)
32:long flock(unsigned int fd, unsigned int cmd)
33:long mknodat(int dfd, const char* filename, mode_t mode, unsigned dev)
34:long mkdirat(int dfd, const char* pathname, mode_t mode)
35:long unlinkat(int dfd, const char* pathname, int flag)
36:long symlinkat(const char* oldname, int newdfd, const char* newname)
37:long linkat(int olddfd, const char* oldname, int newdfd, const char* newname, int flags)
38:long renameat(int olddfd, const char* oldname, int newdfd, const char* newname)
39:long umount(char* name, int flags)
40:long mount(char* dev_name, char* dir_name, char* type, unsigned long flags, void* data)
41:long pivot_root(const char* new_root, const char* put_old)
42:long ni_syscall(void)
48:long faccessat(int dfd, const char* filename, int mode)
49:long chdir(const char* filename)
50:long fchdir(unsigned int fd)
51:long chroot(const char* filename)
52:long fchmod(unsigned int fd, mode_t mode)
53:long fchmodat(int dfd, const char* filename, mode_t mode)
54:long fchownat(int dfd, const char* filename, uid_t user, gid_t group, int flag)
55:long fchown(unsigned int fd, uid_t user, gid_t group)
56:long openat(int dfd, const char* filename, int flags, mode_t mode)
57:long close(unsigned int fd)
58:long vhangup(void)
59:long pipe2(int* fildes, int flags)
60:long quotactl(unsigned int cmd, const char* special, qid_t id, void* addr)
61:long getdents64(unsigned int fd, struct linux_dirent64* dirent, unsigned int count)
62:long lseek(unsigned int fd, off_t offset, unsigned int whence)
63:long read(unsigned int fd, char* buf, size_t count)
64:long write(unsigned int fd, const char* buf, size_t count)
65:long readv(unsigned long fd, const struct iovec* vec, unsigned long vlen)
66:long writev(unsigned long fd, const struct iovec* vec, unsigned long vlen)
71:long sendfile64(int out_fd, int in_fd, loff_t* offset, size_t count)
75:long vmsplice(int fd, const struct iovec* iov, unsigned long nr_segs, unsigned int flags)
76:long splice(int fd_in, loff_t* off_in, int fd_out, loff_t* off_out, size_t len, unsigned int flags)
77:long tee(int fdin, int fdout, size_t len, unsigned int flags)
78:long readlinkat(int dfd, const char* path, char* buf, int bufsiz)
79:long newfstatat(int dfd, const char* filename, struct stat* statbuf, int flag)
80:long newfstat(unsigned int fd, struct stat* statbuf)
81:long sync(void)
82:long fsync(unsigned int fd)
83:long fdatasync(unsigned int fd)
85:long timerfd_create(int clockid, int flags)
88:long utimensat(int dfd, const char* filename, struct __kernel_timespec* utimes, int flags)
89:long acct(const char* name)
90:long capget(cap_user_header_t header, cap_user_data_t dataptr)
91:long capset(cap_user_header_t header, const cap_user_data_t data)
92:long personality(unsigned int personality)
93:long exit(int error_code)
94:long exit_group(int error_code)
96:long set_tid_address(int* tidptr)
97:long unshare(unsigned long unshare_flags)
98:long futex(u32* uaddr, int op, u32 val, const struct __kernel_timespec* utime, u32* uaddr2, u32 val3)
101:long nanosleep(struct __kernel_timespec* rqtp, struct __kernel_timespec* rmtp)
105:long init_module(void* umod, unsigned long len, const char* uargs)
106:long delete_module(const char* name_user, unsigned int flags)
108:long timer_gettime(timer_t timer_id, struct __kernel_itimerspec* setting)
109:long timer_getoverrun(timer_t timer_id)
110:long timer_settime(timer_t timer_id, int flags, const struct __kernel_itimerspec* new_setting, struct __kernel_itimerspec* old_setting)
111:long timer_delete(timer_t timer_id)
112:long clock_settime(clockid_t which_clock, const struct __kernel_timespec* tp)
113:long clock_gettime(clockid_t which_clock, struct __kernel_timespec* tp)
114:long clock_getres(clockid_t which_clock, struct __kernel_timespec* tp)
116:long syslog(int type, char* buf, int len)
118:long sched_setparam(pid_t pid, struct sched_param* param)
119:long sched_setscheduler(pid_t pid, int policy, struct sched_param* param)
120:long sched_getscheduler(pid_t pid)
121:long sched_getparam(pid_t pid, struct sched_param* param)
124:long sched_yield(void)
125:long sched_get_priority_max(int policy)
126:long sched_get_priority_min(int policy)
128:long restart_syscall(void)
129:long kill(pid_t pid, int sig)
130:long tkill(pid_t pid, int sig)
131:long tgkill(pid_t tgid, pid_t pid, int sig)
140:long setpriority(int which, int who, int niceval)
141:long getpriority(int which, int who)
142:long reboot(int magic1, int magic2, unsigned int cmd, void* arg)
143:long setregid(gid_t rgid, gid_t egid)
144:long setgid(gid_t gid)
145:long setreuid(uid_t ruid, uid_t euid)
146:long setuid(uid_t uid)
147:long setresuid(uid_t ruid, uid_t euid, uid_t suid)
148:long getresuid(uid_t* ruid, uid_t* euid, uid_t* suid)
149:long setresgid(gid_t rgid, gid_t egid, gid_t sgid)
150:long getresgid(gid_t* rgid, gid_t* egid, gid_t* sgid)
151:long setfsuid(uid_t uid)
152:long setfsgid(gid_t gid)
154:long setpgid(pid_t pid, pid_t pgid)
155:long getpgid(pid_t pid)
156:long getsid(pid_t pid)
157:long setsid(void)
158:long getgroups(int gidsetsize, gid_t* grouplist)
159:long setgroups(int gidsetsize, gid_t* grouplist)
160:long newuname(struct new_utsname* name)
161:long sethostname(char* name, int len)
162:long setdomainname(char* name, int len)
166:long umask(int mask)
167:long prctl(int option, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5)
168:long getcpu(unsigned* cpu, unsigned* node, struct getcpu_cache* cache)
171:long adjtimex(struct __kernel_timex* txc_p)
172:long getpid(void)
173:long getppid(void)
174:long getuid(void)
175:long geteuid(void)
176:long getgid(void)
177:long getegid(void)
178:long gettid(void)
181:long mq_unlink(const char* name)
182:long mq_timedsend(mqd_t mqdes, const char* msg_ptr, size_t msg_len, unsigned int msg_prio, const struct __kernel_timespec* abs_timeout)
186:long msgget(key_t key, int msgflg)
190:long semget(key_t key, int nsems, int semflg)
192:long semtimedop(int semid, struct sembuf* sops, unsigned nsops, const struct __kernel_timespec* timeout)
193:long semop(int semid, struct sembuf* sops, unsigned nsops)
194:long shmget(key_t key, size_t size, int flag)
197:long shmdt(char* shmaddr)
198:long socket(int, int, int)
199:long socketpair(int, int, int, int* )
200:long bind(int, struct sockaddr*, int)
201:long listen(int, int)
202:long accept(int, struct sockaddr*, int* )
203:long connect(int, struct sockaddr*, int)
204:long getsockname(int, struct sockaddr*, int* )
205:long getpeername(int, struct sockaddr*, int* )
206:long sendto(int, void*, size_t, unsigned, struct sockaddr*, int)
208:long setsockopt(int fd, int level, int optname, char* optval, int optlen)
209:long getsockopt(int fd, int level, int optname, char* optval, int* optlen)
210:long shutdown(int, int)
214:long $hex brk(unsigned long $hex brk)
215:long munmap(unsigned long addr, size_t len)
216:long mremap(unsigned long addr, unsigned long old_len, unsigned long new_len, unsigned long flags, unsigned long new_addr)
217:long add_key(const char* _type, const char* _description, const void* _payload, size_t plen, key_serial_t destringid)
218:long request_key(const char* _type, const char* _description, const char* _callout_info, key_serial_t destringid)
220:long clone(unsigned long, unsigned long, int*, unsigned long, int* )
224:long swapon(const char* specialfile, int swap_flags)
225:long swapoff(const char* specialfile)
226:long mprotect(unsigned long start, size_t len, unsigned long prot)
227:long msync(unsigned long start, size_t len, int flags)
228:long mlock(unsigned long start, size_t len)
229:long munlock(unsigned long start, size_t len)
230:long mlockall(int flags)
231:long munlockall(void)
232:long mincore(unsigned long start, size_t len, unsigned char* vec)
233:long madvise(unsigned long start, size_t len, int behavior)
234:long remap_file_pages(unsigned long start, unsigned long size, unsigned long prot, unsigned long pgoff, unsigned long flags)
235:long mbind(unsigned long start, unsigned long len, unsigned long mode, const unsigned long* nmask, unsigned long maxnode, unsigned flags)
236:long get_mempolicy(int* policy, unsigned long* nmask, unsigned long maxnode, unsigned long addr, unsigned long flags)
237:long set_mempolicy(int mode, const unsigned long* nmask, unsigned long maxnode)
238:long migrate_pages(pid_t pid, unsigned long maxnode, const unsigned long* from, const unsigned long* to)
239:long move_pages(pid_t pid, unsigned long nr_pages, const void* * pages, const int* nodes, int* status, int flags)
241:long perf_event_open(struct perf_event_attr* attr_uptr, pid_t pid, int cpu, int group_fd, unsigned long flags)
242:long accept4(int, struct sockaddr*, int*, int)
261:long prlimit64(pid_t pid, unsigned int resource, const struct rlimit64* new_rlim, struct rlimit64* old_rlim)
262:long fanotify_init(unsigned int flags, unsigned int event_f_flags)
263:long fanotify_mark(int fanotify_fd, unsigned int flags, u64 mask, int fd, const char* pathname)
264:long name_to_handle_at(int dfd, const char* name, struct file_handle* handle, int* mnt_id, int flag)
265:long open_by_handle_at(int mountdirfd, struct file_handle* handle, int flags)
266:long clock_adjtime(clockid_t which_clock, struct __kernel_timex* tx)
267:long syncfs(int fd)
268:long setns(int fd, int nstype)
270:long process_vm_readv(pid_t pid, const struct iovec* lvec, unsigned long liovcnt, const struct iovec* rvec, unsigned long riovcnt, unsigned long flags)
271:long process_vm_writev(pid_t pid, const struct iovec* lvec, unsigned long liovcnt, const struct iovec* rvec, unsigned long riovcnt, unsigned long flags)
272:long kcmp(pid_t pid1, pid_t pid2, int type, unsigned long idx1, unsigned long idx2)
273:long finit_module(int fd, const char* uargs, int flags)
274:long sched_setattr(pid_t pid, struct sched_attr* attr, unsigned int flags)
275:long sched_getattr(pid_t pid, struct sched_attr* attr, unsigned int size, unsigned int flags)
276:long renameat2(int olddfd, const char* oldname, int newdfd, const char* newname, unsigned int flags)
277:long seccomp(unsigned int op, unsigned int flags, void* uargs)
278:long getrandom(char* buf, size_t count, unsigned int flags)
279:long memfd_create(const char* uname_ptr, unsigned int flags)
280:long bpf(int cmd, union bpf_attr* attr, unsigned int size)
282:long userfaultfd(int flags)
283:long membarrier(int cmd, unsigned int flags, int cpu_id)
284:long mlock2(unsigned long start, size_t len, int flags)
285:long copy_file_range(int fd_in, loff_t* off_in, int fd_out, loff_t* off_out, size_t len, unsigned int flags)
288:long pkey_mprotect(unsigned long start, size_t len, unsigned long prot, int pkey)
289:long pkey_alloc(unsigned long flags, unsigned long init_val)
290:long pkey_free(int pkey)
291:long statx(int dfd, const char* path, unsigned flags, unsigned mask, struct statx* buffer)
293:long rseq(struct rseq* rseq, uint32_t rseq_len, int flags, uint32_t sig)
294:long kexec_file_load(int kernel_fd, int initrd_fd, unsigned long cmdline_len, const char* cmdline_ptr, unsigned long flags)
403:long clock_gettime(clockid_t which_clock, struct __kernel_timespec* tp)
404:long clock_settime(clockid_t which_clock, const struct __kernel_timespec* tp)
405:long clock_adjtime(clockid_t which_clock, struct __kernel_timex* tx)
406:long clock_getres(clockid_t which_clock, struct __kernel_timespec* tp)
407:long clock_nanosleep(clockid_t which_clock, int flags, const struct __kernel_timespec* rqtp, struct __kernel_timespec* rmtp)
408:long timer_gettime(timer_t timer_id, struct __kernel_itimerspec* setting)
409:long timer_settime(timer_t timer_id, int flags, const struct __kernel_itimerspec* new_setting, struct __kernel_itimerspec* old_setting)
410:long timerfd_gettime(int ufd, struct __kernel_itimerspec* otmr)
411:long timerfd_settime(int ufd, int flags, const struct __kernel_itimerspec* utmr, struct __kernel_itimerspec* otmr)
412:long utimensat(int dfd, const char* filename, struct __kernel_timespec* utimes, int flags)
416:long io_pgetevents(aio_context_t ctx_id, long min_nr, long nr, struct io_event* events, struct __kernel_timespec* timeout, const struct __aio_sigset* sig)
418:long mq_timedsend(mqd_t mqdes, const char* msg_ptr, size_t msg_len, unsigned int msg_prio, const struct __kernel_timespec* abs_timeout)
419:long mq_timedreceive(mqd_t mqdes, char* msg_ptr, size_t msg_len, unsigned int* msg_prio, const struct __kernel_timespec* abs_timeout)
420:long semtimedop(int semid, struct sembuf* sops, unsigned nsops, const struct __kernel_timespec* timeout)
422:long futex(u32* uaddr, int op, u32 val, const struct __kernel_timespec* utime, u32* uaddr2, u32 val3)
423:long sched_rr_get_interval(pid_t pid, struct __kernel_timespec* interval)
424:long pidfd_send_signal(int pidfd, int sig, siginfo_t* info, unsigned int flags)
425:long io_uring_setup(u32 entries, struct io_uring_params* p)
426:long io_uring_enter(unsigned int fd, u32 to_submit, u32 min_complete, u32 flags, const void* argp, size_t argsz)
427:long io_uring_register(unsigned int fd, unsigned int op, void* arg, unsigned int nr_args)
428:long open_tree(int dfd, const char* path, unsigned flags)
429:long move_mount(int from_dfd, const char* from_path, int to_dfd, const char* to_path, unsigned int ms_flags)
430:long fsopen(const char* fs_name, unsigned int flags)
431:long fsconfig(int fs_fd, unsigned int cmd, const char* key, const void* value, int aux)
432:long fsmount(int fs_fd, unsigned int flags, unsigned int ms_flags)
433:long fspick(int dfd, const char* path, unsigned int flags)
434:long pidfd_open(pid_t pid, unsigned int flags)
435:long clone3(struct clone_args* uargs, size_t size)
436:long close_range(unsigned int fd, unsigned int max_fd, unsigned int flags)
437:long openat2(int dfd, const char* filename, struct open_how* how, size_t size)
438:long pidfd_getfd(int pidfd, int fd, unsigned int flags)
439:long faccessat2(int dfd, const char* filename, int mode, int flags)
440:long process_madvise(int pidfd, const struct iovec* vec, size_t vlen, int behavior, unsigned int flags)
442:long mount_setattr(int dfd, const char* path, unsigned int flags, struct mount_attr* uattr, size_t usize)
443:long quotactl_fd(unsigned int fd, unsigned int cmd, qid_t id, void* addr)
444:long landlock_create_ruleset(const struct landlock_ruleset_attr* attr, size_t size, u32 flags)
445:long landlock_add_rule(int ruleset_fd, enum landlock_rule_type rule_type, const void* rule_attr, u32 flags)
446:long landlock_restrict_self(int ruleset_fd, u32 flags)
447:long memfd_secret(unsigned int flags)
448:long process_mrelease(int pidfd, unsigned int flags)
449:long futex_waitv(struct futex_waitv* waiters, unsigned int nr_futexes, unsigned int flags, struct __kernel_timespec* timeout, clockid_t clockid)
450:long set_mempolicy_home_node(unsigned long start, unsigned long len, unsigned long home_node, unsigned long flags)
1024:long open(const char* filename, int flags, mode_t mode)
1025:long link(const char* oldname, const char* newname)
1026:long unlink(const char* pathname)
1027:long mknod(const char* filename, mode_t mode, unsigned dev)
1028:long chmod(const char* filename, mode_t mode)
1029:long chown(const char* filename, uid_t user, gid_t group)
1030:long mkdir(const char* pathname, mode_t mode)
1031:long rmdir(const char* pathname)
1032:long lchown(const char* filename, uid_t user, gid_t group)
1033:long access(const char* filename, int mode)
1034:long rename(const char* oldname, const char* newname)
1035:long readlink(const char* path, char* buf, int bufsiz)
1036:long symlink(const char* old, const char* new)
1037:long utimes(char* filename, struct __kernel_old_timeval* utimes)
1038:long stat64(const char* filename, struct stat64* statbuf)
1039:long lstat64(const char* filename, struct stat64* statbuf)
1040:long pipe(int* fildes)
1041:long dup2(unsigned int oldfd, unsigned int newfd)
1042:long epoll_create(int size)
1043:long inotify_init(void)
1044:long eventfd(unsigned int count)
1045:long signalfd(int ufd, sigset_t* user_mask, size_t sizemask)
1046:long sendfile(int out_fd, int in_fd, off_t* offset, size_t count)
1047:long ftruncate(unsigned int fd, unsigned long length)
1048:long truncate(const char* path, long length)
1049:long newstat(const char* filename, struct stat* statbuf)
1050:long newlstat(const char* filename, struct stat* statbuf)
1051:long newfstat(unsigned int fd, struct stat* statbuf)
1052:long fcntl(unsigned int fd, unsigned int cmd, unsigned long arg)
1053:long fadvise64(int fd, loff_t offset, size_t len, int advice)
1054:long newfstatat(int dfd, const char* filename, struct stat* statbuf, int flag)
1055:long fstatfs(unsigned int fd, struct statfs* buf)
1056:long statfs(const char* path, struct statfs* buf)
1057:long lseek(unsigned int fd, off_t offset, unsigned int whence)
1059:long alarm(unsigned int seconds)
1060:long getpgrp(void)
1061:long pause(void)
1062:long time(time_t* tloc)
1063:long utime(char* filename, struct utimbuf* times)
1064:long creat(const char* pathname, mode_t mode)
1065:long getdents(unsigned int fd, struct linux_dirent* dirent, unsigned int count)
1066:long futimesat(int dfd, const char* filename, struct __kernel_old_timeval* utimes)
1067:long select(int n, fd_set* inp, fd_set* outp, fd_set* exp, struct __kernel_old_timeval* tvp)
1068:long poll(struct pollfd* ufds, unsigned int nfds, int timeout)
1069:long epoll_wait(int epfd, struct epoll_event* events, int maxevents, int timeout)
1070:long ustat(unsigned dev, struct ustat* ubuf)
1071:long vfork(void)
1072:long wait4(pid_t pid, int* stat_addr, int options, struct rusage* ru)
1073:long recv(int, void*, size_t, unsigned)
1074:long send(int, void*, size_t, unsigned)
1076:long oldumount(char* name)
1077:long uselib(const char* library)
1079:long fork(void)
